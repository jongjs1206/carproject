<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
   
	<!-- URL 설정 -->
	<http use-expressions="true" auto-config="true">
		<intercept-url pattern="/Main.jsp" access="permitAll" />
		<intercept-url pattern="/all/**" access="permitAll" />
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/user/**" access="hasAnyRole('USER, ADMIN')" />
		

		<form-login login-page="/all/login.do" default-target-url="/all/succes.do"
		 authentication-failure-url="/all/login.do?error"
		  username-parameter="m_id" password-parameter="m_pw" />
		<logout logout-url="/logout" logout-success-url="/all/login.do"/>
		<access-denied-handler error-page="/all/noaccess.do" />
		
		<csrf disabled="false" /> 
		
		
		<session-management invalid-session-url="/all/login.do"> 
		    <concurrency-control 
		    					max-sessions="1" 
		                         expired-url="/all/homepage.do"   
		                         error-if-maximum-exceeded="false" />
		</session-management>
	</http>

	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- BCryptPasswordEncoder 클래스 빈 추가  -->
	<beans:bean id="bcryptPasswordEncoder" 
	             class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- provider -->
	<authentication-manager>
		<authentication-provider>
		    <!-- 로그인 시 비밀번호를 암호화해서 DB에서 조회한 비밀번호와 비교 -->
		    <password-encoder ref="bcryptPasswordEncoder"/>
		     
			<jdbc-user-service data-source-ref="dataSource" role-prefix="" users-by-username-query="select m_id, m_pw, enabled from member where m_id = ?"
				authorities-by-username-query="select m_id, auth from auth where m_id = ?"/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>