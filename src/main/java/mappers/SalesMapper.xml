<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="salesMap">

<!-- 글 등록 -->
<!-- <insert id="salesInsert" parameterType="sales">
	INSERT INTO sell 
	(sell_id, m_id, title, w_date, old, mile, color, accident, price, image, option, content
	, vehicle_num, fuel, gear, status, baeki, guarantee, seller) 
	VALUES 
	(nextval(sell_sell_id_sq), #{m_id}, #{title}, now(), #{old}, #{mile}, #{color}, #{accident}
	, #{price}, #{image}, #{strOption}, #{content}, #{vehicle_num}
	,#{fuel}, #{gear}, #{status}, #{baeki}, #{guarantee}, #{seller})
</insert> -->

<!-- 글 상세페이지(확인) -->
<select id="salesCheck" parameterType="long" resultType="sales">
	<![CDATA[
		SELECT s.m_id, s.title, s.old, s.mile, s.color, s.accident, s.price, s.image, s.option, s.content, s.vehicle_num, 
			s.baeki, s.guarantee, s.fuel, s.gear, m.m_id, m.m_name, m.tel
		FROM sell s 
		INNER JOIN (SELECT * FROM member ) m  ON m.m_id = s.m_id 
		where s.sell_id = #{num};
	]]>
</select>

<!-- 글 수정 -->
<update id="salesModify" parameterType="sales">
	<![CDATA[ 
		UPDATE sell 
		SET title=#{title}, old=#{old}, mile=#{mile}, color=#{color}, accident=#{accident}, price=#{price},
				image=#{image}, option=#{strOption}, content=#{content}, vehicle_num=#{vehicle_num}, fuel=#{fuel},
				gear=#{gear}, baeki=#{baeki}
		WHERE sell_id=#{sell_id}
	]]>
</update>

<!-- 글 삭제 -->
<delete id="salesDelete" parameterType="sales">
	<![CDATA[
		DELETE FROM sell
		WHERE sell_id=#{sell_id}
	]]>
</delete>

<!-- 버튼으로 작업 ////////////////////////////////////////////////////////////////////////////////////// -->
<!-- 글 등록을 위한 sell_id 찾아오기 -->
<select id="findSellId" resultType="Integer">
   SELECT nextval(sell_sell_id_sq)
</select>

<!-- 등록하기 버튼 : 글 등록-->
<insert id="uploadBtn" parameterType="sales">
	INSERT INTO sell 
	(sell_id, g_id, m_id, title, w_date, old, mile, color, accident, price, image, option, content, 
		vehicle_num, fuel, gear, status, baeki, seller) 
	VALUES 
	(#{sell_id}, #{g_id}, #{m_id}, #{title}, now(), #{old}, #{mile}, #{color}, #{accident}, 
		#{price}, #{image}, #{strOption}, #{content}, #{vehicle_num}, 
		#{fuel}, #{gear}, #{status}, #{baeki}, #{m_id})
</insert>

<!-- 이미지분석 결과를 해당 판매글의 DB에 입력 -->
<update id="insertAnalysis" parameterType="hashmap">
	UPDATE sell SET
	analysis = #{v_result}
	WHERE sell_id = #{sell_id}
</update>

<!-- 글 등록시 코인 -1 반영 (코인테이블) -->
<insert id="useCoinC" parameterType="member">
	INSERT INTO coin
	(m_id, day, coin)  
	VALUES
	(#{m_id}, now(), -1)
</insert>

<!-- 글 등록시 코인 -1 반영 (멤버테이블) -->
<update id="useCoinM" parameterType="member">
	UPDATE member SET
	coin=coin-1 
	WHERE m_id=#{m_id}
</update>

<!-- 글 등록시 시세 예측 결과를 p_price에 업데이트 -->
<update id="insertPredict" parameterType="hashmap">
	UPDATE sell SET
	p_price = #{p_price}
	WHERE sell_id = #{sell_id}
</update>

<!-- 5년 뒤 시세 예측 결과를 f_price에 업데이트 -->
<update id="insertFuture" parameterType="hashmap">
	UPDATE sell SET
	f_price = #{f_price}
	WHERE sell_id = #{sell_id}
</update>


<!-- 수정하기 버튼 -->
<update id="modifyBtn" parameterType="sales" >
	<![CDATA[
		UPDATE sell 
		SET title=#{title}, old=#{old}, mile=#{mile}, color=#{color}, accident=#{accident}, price=#{price},
				image=#{image}, option=#{strOption}, content=#{content}, vehicle_num=#{vehicle_num}, fuel=#{fuel},
				gear=#{gear}, baeki=#{baeki}
		WHERE sell_id=#{sell_id}
	]]>
</update>

<!-- 삭제하기 버튼 -->
<delete id="deleteBtn" parameterType="sales">
	<![CDATA[
		DELETE FROM sell
		WHERE sell_id=#{sell_id}
	]]>
</delete>


<!-- 차랑명 데이터 ////////////////////////////////////////////////////////////////////////////////////// -->
<!-- 제조사 -->
<select id="brandList" resultType="hashmap" parameterType="String">
	SELECT jejosa FROM category GROUP BY jejosa;
</select>

<!-- 모델 -->
<select id="model" resultType="hashmap" parameterType="sales">
	SELECT model FROM category WHERE jejosa=#{jejosa};  
</select>

<!-- 세부모델 -->
<select id="detailmodel" resultType="hashmap" parameterType="sales">
	SELECT detail FROM detail d INNER JOIN (SELECT * FROM category WHERE jejosa=#{jejosa} AND model=#{model}) c ON d.car_num = c.car_num;
</select>

<!-- 등급 -->
<select id="grade" resultType="hashmap" parameterType="sales">
	SELECT distinct grade1 FROM grade g INNER JOIN (SELECT * FROM detail WHERE detail=#{detail}) d ON d.d_id = g.d_id;
</select>

<!-- 세부등급 -->
<select id="detailgrade" resultType="hashmap" parameterType="sales">
	SELECT distinct grade2, g_id FROM grade g INNER JOIN (SELECT * FROM detail WHERE detail=#{detail}) d ON d.d_id = g.d_id;
</select>

<!-- 차랑명 (제조사, 모델, 세부모델, 등급, 세부등급) -->
<!-- SELECT c.jejosa, c.model, d.detail, g.grade1, g.grade2 FROM detail d INNER JOIN (SELECT * FROM grade) g ON d.d_id=g.d_id INNER JOIN category c ON d.car_num=c.car_num WHERE g.g_id=${g_id} -->
</mapper>